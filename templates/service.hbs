import { Injectable } from '@nestjs/common';
import { {{className}}, {{className}}Document } from './schemas/{{pathName}}.schema';
import { {{className}}Repository } from './{{pathName}}.repository';
import { {{className}}NotFoundError } from './errors/{{pathName}}-not-found.error';


@Injectable()
export class {{className}}Service {
  constructor(private readonly repository: {{className}}Repository) {}

  async create(input: Partial<{{className}}Document>): Promise<{{className}}> {
    return this.repository.create(input);
  }

  async findById(id: string): Promise<{{className}}> {
    return await this.repository.findOneById(id);
  }

  async getById(id: string): Promise<{{className}}> {
    const {{variableName}} = await this.findById(id);
    if(!{{variableName}}) {
      throw new {{className}}NotFoundError();
    }
    return {{variableName}};
  }
}
